predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.19.03_0_1_w0_1
2024-11-20 12:04:42,992 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.19.03_0_1_w0_1 ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.19.03_0_1_w0_1.test.preds

2024-11-20 12:04:48,739 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
2024-11-20 12:04:50,814 - INFO - __main__ - predicting on ../data/norsid_test_machamp.conll, saving on /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.19.03_0_1_w0_1.test.preds
2024-11-20 12:04:51,746 - INFO - machamp.data.machamp_dataset - Reading ../data/norsid_test_machamp.conll...
2024-11-20 12:04:52,399 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:04:52,789 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:04:53,491 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:04:54,556 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:04:54,788 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:04:54,888 - INFO - machamp.readers.read_sequence - Stats SID_crossling (../data/norsid_test_machamp.conll):
2024-11-20 12:04:54,889 - INFO - machamp.readers.read_sequence - Lines:      5,500
2024-11-20 12:04:54,889 - INFO - machamp.readers.read_sequence - Words:      42,250
2024-11-20 12:04:54,889 - INFO - machamp.readers.read_sequence - Subwords:   65,335
2024-11-20 12:04:54,889 - INFO - machamp.readers.read_sequence - Unks:       0
2024-11-20 12:04:54,889 - INFO - machamp.readers.read_sequence - Pre-splits: 0
2024-11-20 12:04:54,891 - INFO - machamp.data.machamp_dataset - Done reading ../data/norsid_test_machamp.conll (3.0s)

/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/utils/data/sampler.py:76: UserWarning: `data_source` argument is not used and will be removed in 2.2.0.You may still have custom implementation that utilizes it.
  warnings.warn(
2024-11-20 12:04:58,563 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:05:01,466 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:05:06,782 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:05:14,639 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:05:16,403 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:05:17,084 - INFO - machamp.utils.myutils - intent_accuracy : 0.9567
2024-11-20 12:05:17,084 - INFO - machamp.utils.myutils - slots_span_f1   : 0.8312
2024-11-20 12:05:17,084 - INFO - machamp.utils.myutils - sum             : 1.7879
2024-11-20 12:05:17,084 - INFO - machamp.utils.myutils - 

predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.19.03_0_1_w0_1.preds
2024-11-20 12:05:23,292 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.19.03_0_1_w0_1.preds ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.19.03_0_1_w0_1.preds.test.preds

2024-11-20 12:05:28,443 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '#'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.19.03_0_1_w0_1.preds.eval
2024-11-20 12:05:33,857 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.19.03_0_1_w0_1.preds.eval ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.19.03_0_1_w0_1.preds.eval.test.preds

2024-11-20 12:05:39,519 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '{'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.20.48_0_1_w0_1
2024-11-20 12:05:45,991 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.20.48_0_1_w0_1 ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.20.48_0_1_w0_1.test.preds

2024-11-20 12:05:51,697 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
2024-11-20 12:05:53,565 - INFO - __main__ - predicting on ../data/norsid_test_machamp.conll, saving on /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.20.48_0_1_w0_1.test.preds
2024-11-20 12:05:54,527 - INFO - machamp.data.machamp_dataset - Reading ../data/norsid_test_machamp.conll...
2024-11-20 12:05:55,206 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:05:55,598 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:05:56,300 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:05:57,352 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:05:57,581 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:05:57,681 - INFO - machamp.readers.read_sequence - Stats SID_crossling (../data/norsid_test_machamp.conll):
2024-11-20 12:05:57,681 - INFO - machamp.readers.read_sequence - Lines:      5,500
2024-11-20 12:05:57,681 - INFO - machamp.readers.read_sequence - Words:      42,250
2024-11-20 12:05:57,681 - INFO - machamp.readers.read_sequence - Subwords:   65,335
2024-11-20 12:05:57,681 - INFO - machamp.readers.read_sequence - Unks:       0
2024-11-20 12:05:57,681 - INFO - machamp.readers.read_sequence - Pre-splits: 0
2024-11-20 12:05:57,684 - INFO - machamp.data.machamp_dataset - Done reading ../data/norsid_test_machamp.conll (3.0s)

/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/utils/data/sampler.py:76: UserWarning: `data_source` argument is not used and will be removed in 2.2.0.You may still have custom implementation that utilizes it.
  warnings.warn(
2024-11-20 12:06:01,350 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:06:04,284 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:06:09,610 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:06:17,532 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:06:19,297 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:06:19,988 - INFO - machamp.utils.myutils - intent_accuracy : 0.9569
2024-11-20 12:06:19,988 - INFO - machamp.utils.myutils - slots_span_f1   : 0.8325
2024-11-20 12:06:19,988 - INFO - machamp.utils.myutils - sum             : 1.7894
2024-11-20 12:06:19,988 - INFO - machamp.utils.myutils - 

predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.20.48_0_1_w0_1.preds
2024-11-20 12:06:26,539 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.20.48_0_1_w0_1.preds ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.20.48_0_1_w0_1.preds.test.preds

2024-11-20 12:06:32,191 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '#'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.20.48_0_1_w0_1.preds.eval
2024-11-20 12:06:38,286 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.20.48_0_1_w0_1.preds.eval ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.20.48_0_1_w0_1.preds.eval.test.preds

2024-11-20 12:06:43,933 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '{'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.21.06_0_1_w0_1
2024-11-20 12:06:50,220 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.21.06_0_1_w0_1 ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.21.06_0_1_w0_1.test.preds

2024-11-20 12:06:55,844 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
2024-11-20 12:06:57,646 - INFO - __main__ - predicting on ../data/norsid_test_machamp.conll, saving on /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.21.06_0_1_w0_1.test.preds
2024-11-20 12:06:58,639 - INFO - machamp.data.machamp_dataset - Reading ../data/norsid_test_machamp.conll...
2024-11-20 12:06:59,300 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:06:59,690 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:07:00,396 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:07:01,447 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:07:01,676 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:07:01,777 - INFO - machamp.readers.read_sequence - Stats SID_crossling (../data/norsid_test_machamp.conll):
2024-11-20 12:07:01,777 - INFO - machamp.readers.read_sequence - Lines:      5,500
2024-11-20 12:07:01,777 - INFO - machamp.readers.read_sequence - Words:      42,250
2024-11-20 12:07:01,777 - INFO - machamp.readers.read_sequence - Subwords:   65,335
2024-11-20 12:07:01,777 - INFO - machamp.readers.read_sequence - Unks:       0
2024-11-20 12:07:01,777 - INFO - machamp.readers.read_sequence - Pre-splits: 0
2024-11-20 12:07:01,779 - INFO - machamp.data.machamp_dataset - Done reading ../data/norsid_test_machamp.conll (3.0s)

/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/utils/data/sampler.py:76: UserWarning: `data_source` argument is not used and will be removed in 2.2.0.You may still have custom implementation that utilizes it.
  warnings.warn(
2024-11-20 12:07:05,461 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:07:08,381 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:07:13,749 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:07:21,652 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:07:23,429 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:07:24,121 - INFO - machamp.utils.myutils - intent_accuracy : 0.9564
2024-11-20 12:07:24,121 - INFO - machamp.utils.myutils - slots_span_f1   : 0.8346
2024-11-20 12:07:24,121 - INFO - machamp.utils.myutils - sum             : 1.7910
2024-11-20 12:07:24,121 - INFO - machamp.utils.myutils - 

predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.21.06_0_1_w0_1.preds
2024-11-20 12:07:30,225 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.21.06_0_1_w0_1.preds ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.21.06_0_1_w0_1.preds.test.preds

2024-11-20 12:07:35,425 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '#'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.21.06_0_1_w0_1.preds.eval
2024-11-20 12:07:40,748 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.21.06_0_1_w0_1.preds.eval ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.04_16.56.37_2024.11.12_18.21.06_0_1_w0_1.preds.eval.test.preds

2024-11-20 12:07:46,376 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '{'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.19.03_0_1_w0_1
2024-11-20 12:07:52,807 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.19.03_0_1_w0_1 ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.19.03_0_1_w0_1.test.preds

2024-11-20 12:07:58,494 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
2024-11-20 12:08:00,264 - INFO - __main__ - predicting on ../data/norsid_test_machamp.conll, saving on /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.19.03_0_1_w0_1.test.preds
2024-11-20 12:08:01,230 - INFO - machamp.data.machamp_dataset - Reading ../data/norsid_test_machamp.conll...
2024-11-20 12:08:01,898 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:08:02,289 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:08:02,993 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:08:04,042 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:08:04,272 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:08:04,372 - INFO - machamp.readers.read_sequence - Stats SID_crossling (../data/norsid_test_machamp.conll):
2024-11-20 12:08:04,372 - INFO - machamp.readers.read_sequence - Lines:      5,500
2024-11-20 12:08:04,372 - INFO - machamp.readers.read_sequence - Words:      42,250
2024-11-20 12:08:04,372 - INFO - machamp.readers.read_sequence - Subwords:   65,335
2024-11-20 12:08:04,372 - INFO - machamp.readers.read_sequence - Unks:       0
2024-11-20 12:08:04,372 - INFO - machamp.readers.read_sequence - Pre-splits: 0
2024-11-20 12:08:04,374 - INFO - machamp.data.machamp_dataset - Done reading ../data/norsid_test_machamp.conll (3.0s)

/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/utils/data/sampler.py:76: UserWarning: `data_source` argument is not used and will be removed in 2.2.0.You may still have custom implementation that utilizes it.
  warnings.warn(
2024-11-20 12:08:08,074 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:08:11,004 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:08:16,336 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:08:24,260 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:08:26,018 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:08:26,700 - INFO - machamp.utils.myutils - intent_accuracy : 0.9687
2024-11-20 12:08:26,700 - INFO - machamp.utils.myutils - slots_span_f1   : 0.8342
2024-11-20 12:08:26,700 - INFO - machamp.utils.myutils - sum             : 1.8030
2024-11-20 12:08:26,700 - INFO - machamp.utils.myutils - 

predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.19.03_0_1_w0_1.preds
2024-11-20 12:08:32,910 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.19.03_0_1_w0_1.preds ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.19.03_0_1_w0_1.preds.test.preds

2024-11-20 12:08:38,066 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '#'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.19.03_0_1_w0_1.preds.eval
2024-11-20 12:08:43,496 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.19.03_0_1_w0_1.preds.eval ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.19.03_0_1_w0_1.preds.eval.test.preds

2024-11-20 12:08:49,114 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '{'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.20.48_0_1_w0_1
2024-11-20 12:08:55,733 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.20.48_0_1_w0_1 ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.20.48_0_1_w0_1.test.preds

2024-11-20 12:09:01,374 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
2024-11-20 12:09:03,265 - INFO - __main__ - predicting on ../data/norsid_test_machamp.conll, saving on /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.20.48_0_1_w0_1.test.preds
2024-11-20 12:09:04,192 - INFO - machamp.data.machamp_dataset - Reading ../data/norsid_test_machamp.conll...
2024-11-20 12:09:04,833 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:09:05,233 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:09:05,942 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:09:07,013 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:09:07,248 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:09:07,350 - INFO - machamp.readers.read_sequence - Stats SID_crossling (../data/norsid_test_machamp.conll):
2024-11-20 12:09:07,350 - INFO - machamp.readers.read_sequence - Lines:      5,500
2024-11-20 12:09:07,350 - INFO - machamp.readers.read_sequence - Words:      42,250
2024-11-20 12:09:07,350 - INFO - machamp.readers.read_sequence - Subwords:   65,335
2024-11-20 12:09:07,350 - INFO - machamp.readers.read_sequence - Unks:       0
2024-11-20 12:09:07,350 - INFO - machamp.readers.read_sequence - Pre-splits: 0
2024-11-20 12:09:07,352 - INFO - machamp.data.machamp_dataset - Done reading ../data/norsid_test_machamp.conll (3.0s)

/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/utils/data/sampler.py:76: UserWarning: `data_source` argument is not used and will be removed in 2.2.0.You may still have custom implementation that utilizes it.
  warnings.warn(
2024-11-20 12:09:11,058 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:09:14,012 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:09:19,382 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:09:27,344 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:09:29,105 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:09:29,788 - INFO - machamp.utils.myutils - intent_accuracy : 0.9651
2024-11-20 12:09:29,788 - INFO - machamp.utils.myutils - slots_span_f1   : 0.8372
2024-11-20 12:09:29,788 - INFO - machamp.utils.myutils - sum             : 1.8023
2024-11-20 12:09:29,788 - INFO - machamp.utils.myutils - 

predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.20.48_0_1_w0_1.preds
2024-11-20 12:09:36,068 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.20.48_0_1_w0_1.preds ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.20.48_0_1_w0_1.preds.test.preds

2024-11-20 12:09:41,720 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '#'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.20.48_0_1_w0_1.preds.eval
2024-11-20 12:09:47,492 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.20.48_0_1_w0_1.preds.eval ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.20.48_0_1_w0_1.preds.eval.test.preds

2024-11-20 12:09:53,146 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '{'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.21.06_0_1_w0_1
2024-11-20 12:09:59,779 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.21.06_0_1_w0_1 ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.21.06_0_1_w0_1.test.preds

2024-11-20 12:10:05,138 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
2024-11-20 12:10:06,919 - INFO - __main__ - predicting on ../data/norsid_test_machamp.conll, saving on /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.21.06_0_1_w0_1.test.preds
2024-11-20 12:10:08,057 - INFO - machamp.data.machamp_dataset - Reading ../data/norsid_test_machamp.conll...
2024-11-20 12:10:08,766 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:10:09,159 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:10:09,916 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:10:10,989 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:10:11,232 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:10:11,335 - INFO - machamp.readers.read_sequence - Stats SID_crossling (../data/norsid_test_machamp.conll):
2024-11-20 12:10:11,336 - INFO - machamp.readers.read_sequence - Lines:      5,500
2024-11-20 12:10:11,336 - INFO - machamp.readers.read_sequence - Words:      42,250
2024-11-20 12:10:11,336 - INFO - machamp.readers.read_sequence - Subwords:   65,335
2024-11-20 12:10:11,336 - INFO - machamp.readers.read_sequence - Unks:       0
2024-11-20 12:10:11,336 - INFO - machamp.readers.read_sequence - Pre-splits: 0
2024-11-20 12:10:11,342 - INFO - machamp.data.machamp_dataset - Done reading ../data/norsid_test_machamp.conll (3.0s)

/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/utils/data/sampler.py:76: UserWarning: `data_source` argument is not used and will be removed in 2.2.0.You may still have custom implementation that utilizes it.
  warnings.warn(
2024-11-20 12:10:15,106 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:10:18,090 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:10:23,536 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:10:31,708 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:10:33,538 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:10:34,249 - INFO - machamp.utils.myutils - intent_accuracy : 0.9664
2024-11-20 12:10:34,249 - INFO - machamp.utils.myutils - slots_span_f1   : 0.8409
2024-11-20 12:10:34,249 - INFO - machamp.utils.myutils - sum             : 1.8073
2024-11-20 12:10:34,249 - INFO - machamp.utils.myutils - 

predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.21.06_0_1_w0_1.preds
2024-11-20 12:10:40,180 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.21.06_0_1_w0_1.preds ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.21.06_0_1_w0_1.preds.test.preds

2024-11-20 12:10:45,843 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '#'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.21.06_0_1_w0_1.preds.eval
2024-11-20 12:10:51,628 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.21.06_0_1_w0_1.preds.eval ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.18.56_2024.11.12_18.21.06_0_1_w0_1.preds.eval.test.preds

2024-11-20 12:10:57,258 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '{'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.19.03_0_1_w0_1
2024-11-20 12:11:03,593 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.19.03_0_1_w0_1 ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.19.03_0_1_w0_1.test.preds

2024-11-20 12:11:09,241 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
2024-11-20 12:11:11,002 - INFO - __main__ - predicting on ../data/norsid_test_machamp.conll, saving on /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.19.03_0_1_w0_1.test.preds
2024-11-20 12:11:11,969 - INFO - machamp.data.machamp_dataset - Reading ../data/norsid_test_machamp.conll...
2024-11-20 12:11:12,625 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:11:13,012 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:11:13,714 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:11:14,762 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:11:14,991 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:11:15,091 - INFO - machamp.readers.read_sequence - Stats SID_crossling (../data/norsid_test_machamp.conll):
2024-11-20 12:11:15,091 - INFO - machamp.readers.read_sequence - Lines:      5,500
2024-11-20 12:11:15,091 - INFO - machamp.readers.read_sequence - Words:      42,250
2024-11-20 12:11:15,091 - INFO - machamp.readers.read_sequence - Subwords:   65,335
2024-11-20 12:11:15,091 - INFO - machamp.readers.read_sequence - Unks:       0
2024-11-20 12:11:15,091 - INFO - machamp.readers.read_sequence - Pre-splits: 0
2024-11-20 12:11:15,093 - INFO - machamp.data.machamp_dataset - Done reading ../data/norsid_test_machamp.conll (3.0s)

/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/utils/data/sampler.py:76: UserWarning: `data_source` argument is not used and will be removed in 2.2.0.You may still have custom implementation that utilizes it.
  warnings.warn(
2024-11-20 12:11:18,792 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:11:21,699 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:11:27,008 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:11:34,911 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:11:36,672 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:11:37,354 - INFO - machamp.utils.myutils - intent_accuracy : 0.9624
2024-11-20 12:11:37,354 - INFO - machamp.utils.myutils - slots_span_f1   : 0.8184
2024-11-20 12:11:37,354 - INFO - machamp.utils.myutils - sum             : 1.7807
2024-11-20 12:11:37,354 - INFO - machamp.utils.myutils - 

predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.19.03_0_1_w0_1.preds
2024-11-20 12:11:43,638 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.19.03_0_1_w0_1.preds ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.19.03_0_1_w0_1.preds.test.preds

2024-11-20 12:11:48,808 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '#'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.19.03_0_1_w0_1.preds.eval
2024-11-20 12:11:54,106 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.19.03_0_1_w0_1.preds.eval ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.19.03_0_1_w0_1.preds.eval.test.preds

2024-11-20 12:11:59,766 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '{'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.20.48_0_1_w0_1
2024-11-20 12:12:05,938 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.20.48_0_1_w0_1 ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.20.48_0_1_w0_1.test.preds

2024-11-20 12:12:11,596 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
2024-11-20 12:12:13,361 - INFO - __main__ - predicting on ../data/norsid_test_machamp.conll, saving on /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.20.48_0_1_w0_1.test.preds
2024-11-20 12:12:14,344 - INFO - machamp.data.machamp_dataset - Reading ../data/norsid_test_machamp.conll...
2024-11-20 12:12:14,995 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:12:15,386 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:12:16,088 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:12:17,153 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:12:17,385 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:12:17,485 - INFO - machamp.readers.read_sequence - Stats SID_crossling (../data/norsid_test_machamp.conll):
2024-11-20 12:12:17,485 - INFO - machamp.readers.read_sequence - Lines:      5,500
2024-11-20 12:12:17,485 - INFO - machamp.readers.read_sequence - Words:      42,250
2024-11-20 12:12:17,485 - INFO - machamp.readers.read_sequence - Subwords:   65,335
2024-11-20 12:12:17,485 - INFO - machamp.readers.read_sequence - Unks:       0
2024-11-20 12:12:17,485 - INFO - machamp.readers.read_sequence - Pre-splits: 0
2024-11-20 12:12:17,487 - INFO - machamp.data.machamp_dataset - Done reading ../data/norsid_test_machamp.conll (3.0s)

/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/utils/data/sampler.py:76: UserWarning: `data_source` argument is not used and will be removed in 2.2.0.You may still have custom implementation that utilizes it.
  warnings.warn(
2024-11-20 12:12:21,155 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:12:24,081 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:12:29,400 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:12:37,271 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:12:39,025 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:12:39,708 - INFO - machamp.utils.myutils - intent_accuracy : 0.9635
2024-11-20 12:12:39,708 - INFO - machamp.utils.myutils - slots_span_f1   : 0.8235
2024-11-20 12:12:39,708 - INFO - machamp.utils.myutils - sum             : 1.7869
2024-11-20 12:12:39,708 - INFO - machamp.utils.myutils - 

predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.20.48_0_1_w0_1.preds
2024-11-20 12:12:45,867 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.20.48_0_1_w0_1.preds ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.20.48_0_1_w0_1.preds.test.preds

2024-11-20 12:12:51,074 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '#'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.20.48_0_1_w0_1.preds.eval
2024-11-20 12:12:56,343 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.20.48_0_1_w0_1.preds.eval ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.20.48_0_1_w0_1.preds.eval.test.preds

2024-11-20 12:13:01,565 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '{'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.21.06_0_1_w0_1
2024-11-20 12:13:07,800 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.21.06_0_1_w0_1 ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.21.06_0_1_w0_1.test.preds

2024-11-20 12:13:13,441 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
2024-11-20 12:13:15,298 - INFO - __main__ - predicting on ../data/norsid_test_machamp.conll, saving on /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.21.06_0_1_w0_1.test.preds
2024-11-20 12:13:16,277 - INFO - machamp.data.machamp_dataset - Reading ../data/norsid_test_machamp.conll...
2024-11-20 12:13:16,927 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:13:17,318 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:13:18,021 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:13:19,088 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:13:19,321 - WARNING - machamp.data.machamp_vocabulary - I-rating_unit can not be found in namespace slots. This usually means you have unseen labels in your data during prediction. This will lead to incorrect macro-f1 scores.
2024-11-20 12:13:19,422 - INFO - machamp.readers.read_sequence - Stats SID_crossling (../data/norsid_test_machamp.conll):
2024-11-20 12:13:19,422 - INFO - machamp.readers.read_sequence - Lines:      5,500
2024-11-20 12:13:19,422 - INFO - machamp.readers.read_sequence - Words:      42,250
2024-11-20 12:13:19,422 - INFO - machamp.readers.read_sequence - Subwords:   65,335
2024-11-20 12:13:19,422 - INFO - machamp.readers.read_sequence - Unks:       0
2024-11-20 12:13:19,422 - INFO - machamp.readers.read_sequence - Pre-splits: 0
2024-11-20 12:13:19,424 - INFO - machamp.data.machamp_dataset - Done reading ../data/norsid_test_machamp.conll (3.0s)

/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/utils/data/sampler.py:76: UserWarning: `data_source` argument is not used and will be removed in 2.2.0.You may still have custom implementation that utilizes it.
  warnings.warn(
2024-11-20 12:13:23,119 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:13:26,064 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:13:31,435 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:13:39,406 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:13:41,171 - ERROR - machamp.metrics.span_f1 - Warning, one of your labels is not following the BIO scheme: @@unkORpad@@ the span-f1 will not be calculated correctly
2024-11-20 12:13:41,854 - INFO - machamp.utils.myutils - intent_accuracy : 0.9540
2024-11-20 12:13:41,854 - INFO - machamp.utils.myutils - slots_span_f1   : 0.8261
2024-11-20 12:13:41,854 - INFO - machamp.utils.myutils - sum             : 1.7801
2024-11-20 12:13:41,854 - INFO - machamp.utils.myutils - 

predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.21.06_0_1_w0_1.preds
2024-11-20 12:13:48,070 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.21.06_0_1_w0_1.preds ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.21.06_0_1_w0_1.preds.test.preds

2024-11-20 12:13:53,730 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '#'.
predicting with model /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.21.06_0_1_w0_1.preds.eval
2024-11-20 12:13:59,502 - INFO - __main__ - cmd: ../machamp/predict.py /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.21.06_0_1_w0_1.preds.eval ../data/norsid_test_machamp.conll /nfs/gdata/fkoerner/swapped_models/swapped_2024.11.05_18.20.36_2024.11.12_18.21.06_0_1_w0_1.preds.eval.test.preds

2024-11-20 12:14:04,834 - INFO - __main__ - loading model...
/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py:45: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(args.torch_model, map_location=device)
Traceback (most recent call last):
  File "/mounts/Users/cisintern/fkoerner/NorSID/experiments_layer_swap/../machamp/predict.py", line 45, in <module>
    model = torch.load(args.torch_model, map_location=device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1384, in load
    return _legacy_load(
           ^^^^^^^^^^^^^
  File "/mounts/Users/cisintern/fkoerner/.conda/envs/jbert-env/lib/python3.11/site-packages/torch/serialization.py", line 1628, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_pickle.UnpicklingError: invalid load key, '{'.
